@using System.Text;
@using Newtonsoft.Json;
@using Microsoft.Azure.CognitiveServices.Vision.ComputerVision.Models;
@using GetTheTagBlazor.Client.Helpers

@inject HttpClient _httpClient
@inject IConfigService _configService

@if (caption == "")
{
    <p><em>Loading...</em></p>
}
else
{
<div class="modal-body row">
    <div class="col-md-6">


        @*Add picture here!!!*@


        <div style="padding: 10px;">
            <h4>Caption:</h4>
            @caption
        </div>
        <div style="padding: 10px;">
            @if (categories.Count == 0)
            {
                <p><em>Der er ingen Categories fundet.</em></p>
            }
            else
            {
                <h4>Categories:</h4>
                <ul>
                    @foreach (var cat in categories)
                    {
                        <li>@cat.Name.ToString()</li>
                    }
                </ul>
            }
        </div>
    </div>
    <div class="col-md-6">
        <div style="padding: 10px;">
            @if (tags.Count == 0)
            {
                <p><em>Der er ingen Tags fundet.</em></p>
            }
            else
            {
                <h4>Tags:</h4>
                <ul>
                    @foreach (var tag in tags)
                    {
                        <li>@tag.Name.ToString()</li>
                    }
                </ul>
            }
        </div>
    </div>
</div>
        }

@code{
    [Parameter] public string inputUrl { get; set; }

    private TagDTO tagDTOToShow = new TagDTO();
    private UrlDTO urlDTO = new UrlDTO();


    private List<ImageTag> tags = new List<ImageTag>();
    private List<Category> categories = new List<Category>();
    private string caption = "";


    protected async override Task OnInitializedAsync()
    {
        HttpRequestMessage httpRequestMessage = new HttpRequestMessage(HttpMethod.Post, ToString());

        var reqUrl = _configService.GetUrl("Services", "ReqUrl");

        Console.WriteLine("regUrl: " + reqUrl);

        var stringForJson = JsonConvert.SerializeObject(new UrlDTO { url = inputUrl });

        var request = new HttpRequestMessage
        {
            Method = HttpMethod.Post,
            RequestUri = new Uri(reqUrl),
            Content = new StringContent(stringForJson, Encoding.UTF8, "text/plain")
        };

        var newResponse = await _httpClient.SendAsync(request);
        newResponse.EnsureSuccessStatusCode();

        var tagDTOToShow = await newResponse.Content.ReadFromJsonAsync<TagDTO>();

        caption = tagDTOToShow.Caption.Text;
        tags = tagDTOToShow.Tags.ToList();
        categories = tagDTOToShow.Categories.ToList();
    }
}
